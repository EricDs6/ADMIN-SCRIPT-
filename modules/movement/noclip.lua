-- M√≥dulo de Noclip (Atravessar Paredes)
-- Funcionalidade: Permite atravessar paredes desabilitando colis√£o
-- Carregado via _G.AdminScript

-- Verificar se AdminScript est√° dispon√≠vel
local Admin = _G.AdminScript
if not Admin then
    warn("‚ùå Sistema AdminScript n√£o inicializado!")
    return
end

local Services = Admin.Services
local Player = Admin.Player

print("üëª Carregando m√≥dulo de noclip...")

-- Estado do m√≥dulo
local NoclipModule = {
    enabled = false,
    connection = nil
}

-- Fun√ß√£o para ativar noclip
local function enableNoclip()
    local character = Admin.Character
    if not character then
        warn("‚ùå Personagem n√£o encontrado!")
        return false
    end
    
    -- Loop para desabilitar colis√£o continuamente
    NoclipModule.connection = Services.RunService.Stepped:Connect(function()
        if not NoclipModule.enabled then return end
        if not Admin.Character then return end
        
        -- Desabilitar colis√£o de todas as partes do personagem
        for _, part in pairs(Admin.Character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end)
    
    print("üëª Atravessar paredes ativado!")
    return true
end

-- Fun√ß√£o para desativar noclip
local function disableNoclip()
    -- Desconectar loop de noclip
    if NoclipModule.connection then
        NoclipModule.connection:Disconnect()
        NoclipModule.connection = nil
    end
    
    -- Restaurar colis√£o das partes (exceto HumanoidRootPart)
    if Admin.Character then
        for _, part in pairs(Admin.Character:GetChildren()) do
            if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                part.CanCollide = true
            end
        end
    end
    
    print("üöß Atravessar paredes desativado!")
end

-- Fun√ß√£o principal para alternar noclip
local function toggleNoclip()
    NoclipModule.enabled = not NoclipModule.enabled
    
    if NoclipModule.enabled then
        local success = enableNoclip()
        if not success then
            NoclipModule.enabled = false
        end
    else
        disableNoclip()
    end
    
    return NoclipModule.enabled
end

-- Fun√ß√£o para obter estado atual
local function isNoclipping()
    return NoclipModule.enabled
end

-- Fun√ß√£o para for√ßar atravessar uma vez (√∫til para sair de dentro de paredes)
local function forceNoclipOnce()
    if Admin.Character then
        for _, part in pairs(Admin.Character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
        
        -- Restaurar ap√≥s um breve per√≠odo
        wait(0.5)
        
        for _, part in pairs(Admin.Character:GetChildren()) do
            if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                part.CanCollide = true
            end
        end
        
        print("‚ö° Noclip tempor√°rio aplicado!")
    end
end

-- Registrar fun√ß√µes no sistema global
if not Admin.Movement then
    Admin.Movement = {}
end

Admin.Movement.Noclip = {
    toggle = toggleNoclip,
    enable = function() 
        if not NoclipModule.enabled then 
            return toggleNoclip() 
        end 
        return true 
    end,
    disable = function() 
        if NoclipModule.enabled then 
            return not toggleNoclip() 
        end 
        return true 
    end,
    isEnabled = isNoclipping,
    forceOnce = forceNoclipOnce,
    -- Compatibilidade com sistema antigo
    noclipEnabled = function() return NoclipModule.enabled end
}

-- Registrar no sistema de conex√µes para limpeza
Admin.Connections.NoclipModule = NoclipModule

print("‚úÖ M√≥dulo de noclip carregado!")
print("üí° Use Admin.Movement.Noclip.toggle() para ativar/desativar")
print("üí° Use Admin.Movement.Noclip.forceOnce() para atravessar temporariamente")
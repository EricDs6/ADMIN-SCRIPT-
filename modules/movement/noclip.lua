--[[
    M√≥dulo de Noclip (Atravessar Paredes)
    Parte do Admin Script Modular v2.0
    
    Funcionalidades:
    - Atravessar paredes e objetos
    - Op√ß√£o para atravessar apenas uma vez
    - Compat√≠vel com o m√≥dulo de voo
]]

-- Verificar se AdminScript est√° dispon√≠vel
local Admin = _G.AdminScript
if not Admin then
    warn("‚ùå AdminScript n√£o inicializado! M√≥dulo de noclip n√£o pode ser carregado.")
    return
end

local Services = Admin.Services
local Player = Admin.Player

-- Estado do m√≥dulo
local NoclipModule = {
    enabled = false,
    connection = nil,
    temporaryNoclip = false
}

-- Fun√ß√£o para aplicar noclip
local function applyNoclip(character)
    if not character then return end
    
    -- Aplicar noclip a todas as partes do personagem
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") and part.CanCollide then
            part.CanCollide = false
        end
    end
end

-- Fun√ß√£o para restaurar colis√µes
local function restoreCollisions(character)
    if not character then return end
    
    -- Restaurar colis√µes a todas as partes do personagem, exceto HumanoidRootPart
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            part.CanCollide = true
        end
    end
end

-- Fun√ß√£o para ativar noclip
local function enableNoclip()
    -- Verificar se j√° est√° ativo
    if NoclipModule.enabled then return true end
    
    -- Verificar personagem
    local character = Player.Character
    if not character then
        warn("‚ùå Personagem n√£o encontrado!")
        return false
    end
    
    -- Aplicar noclip inicial
    applyNoclip(character)
    
    -- Conectar evento de atualiza√ß√£o cont√≠nua
    NoclipModule.connection = Services.RunService.Stepped:Connect(function()
        applyNoclip(character)
    end)
    
    -- Atualizar estado
    NoclipModule.enabled = true
    NoclipModule.temporaryNoclip = false
    
    -- Notificar
    if Admin.Config.debugMode then
        print("üëª Modo noclip ativado")
    end
    
    return true
end

-- Fun√ß√£o para desativar noclip
local function disableNoclip()
    -- Verificar se est√° ativo
    if not NoclipModule.enabled then return true end
    
    -- Desconectar evento
    if NoclipModule.connection then
        NoclipModule.connection:Disconnect()
        NoclipModule.connection = nil
    end
    
    -- Restaurar colis√µes
    local character = Player.Character
    if character then
        restoreCollisions(character)
    end
    
    -- Atualizar estado
    NoclipModule.enabled = false
    NoclipModule.temporaryNoclip = false
    
    -- Notificar
    if Admin.Config.debugMode then
        print("üß± Modo noclip desativado")
    end
    
    return true
end

-- Fun√ß√£o para alternar noclip
local function toggleNoclip()
    if NoclipModule.enabled then
        return disableNoclip()
    else
        return enableNoclip()
    end
end

-- Fun√ß√£o para aplicar noclip tempor√°rio (uma vez)
local function forceNoclipOnce()
    -- Verificar personagem
    local character = Player.Character
    if not character then
        warn("‚ùå Personagem n√£o encontrado!")
        return false
    end
    
    -- Se noclip j√° estiver ativo, n√£o fazer nada
    if NoclipModule.enabled then
        return true
    end
    
    -- Aplicar noclip
    applyNoclip(character)
    
    -- Configurar temporizador para restaurar colis√µes
    NoclipModule.temporaryNoclip = true
    
    -- Notificar
    if Admin.Config.debugMode then
        print("‚è±Ô∏è Noclip tempor√°rio aplicado")
    end
    
    -- Restaurar ap√≥s 1 segundo se noclip permanente n√£o for ativado
    task.delay(1, function()
        if NoclipModule.temporaryNoclip and not NoclipModule.enabled then
            restoreCollisions(character)
            NoclipModule.temporaryNoclip = false
            
            if Admin.Config.debugMode then
                print("‚è±Ô∏è Noclip tempor√°rio finalizado")
            end
        end
    end)
    
    return true
end

-- Fun√ß√£o para verificar se noclip est√° ativo
local function isNoclipping()
    return NoclipModule.enabled
end

-- Verificar altera√ß√µes de personagem
Admin.onCharacterChanged = Admin.onCharacterChanged or function() end

local originalOnCharacterChanged = Admin.onCharacterChanged
Admin.onCharacterChanged = function(character)
    originalOnCharacterChanged(character)
    
    -- Se noclip estiver ativo, desativar e reativar para o novo personagem
    if NoclipModule.enabled then
        disableNoclip()
        wait(0.5) -- Pequeno atraso para garantir que o personagem esteja carregado
        enableNoclip()
    end
end

-- Exportar fun√ß√µes do m√≥dulo
local API = {
    enable = enableNoclip,
    disable = disableNoclip,
    toggle = toggleNoclip,
    forceOnce = forceNoclipOnce,
    isEnabled = isNoclipping
}

-- Registrar na API global
Admin.Movement.noclip = API

-- Registrar no sistema de conex√µes para limpeza
Admin.Connections.NoclipModule = NoclipModule

-- Mensagem de carregamento
print("‚úÖ M√≥dulo de noclip carregado!")
print("üí° Use Admin.Movement.noclip.toggle() para ativar/desativar")
print("üí° Use Admin.Movement.noclip.forceOnce() para atravessar uma √∫nica vez")

-- Retornar API do m√≥dulo
return API